"""creators table

Revision ID: 0ec3c48d0a46
Revises: aa4de9c20be4
Create Date: 2023-03-16 20:32:49.706797

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0ec3c48d0a46'
down_revision = 'aa4de9c20be4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('viewers')
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.alter_column('commentreg',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_comment_commentreg'), ['commentreg'], unique=False)

    with op.batch_alter_table('content', schema=None) as batch_op:
        batch_op.add_column(sa.Column('views', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('likes', sa.Integer(), nullable=True))
        batch_op.alter_column('contentreg',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_content_contentreg'), ['contentreg'], unique=False)

    with op.batch_alter_table('creators', schema=None) as batch_op:
        batch_op.add_column(sa.Column('visited_on', sa.DateTime(), nullable=True))
        batch_op.alter_column('creatorreg',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_creators_creatorreg'), ['creatorreg'], unique=False)

    with op.batch_alter_table('subscriber', schema=None) as batch_op:
        batch_op.alter_column('viewerreg',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_subscriber_viewerreg'), ['viewerreg'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscriber', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subscriber_viewerreg'))
        batch_op.alter_column('viewerreg',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('creators', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_creators_creatorreg'))
        batch_op.alter_column('creatorreg',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_column('visited_on')

    with op.batch_alter_table('content', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_content_contentreg'))
        batch_op.alter_column('contentreg',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_column('likes')
        batch_op.drop_column('views')

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_commentreg'))
        batch_op.alter_column('commentreg',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    op.create_table('viewers',
    sa.Column('user_name', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('user_email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('viewerreg', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_name', name='viewers_pkey'),
    sa.UniqueConstraint('id', name='viewers_id_key'),
    sa.UniqueConstraint('user_email', name='viewers_user_email_key')
    )
    # ### end Alembic commands ###
